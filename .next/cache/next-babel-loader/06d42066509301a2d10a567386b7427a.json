{"ast":null,"code":"const Binance = require('node-binance-api');\n\nrequire('dotenv').config();\n\nexport default async function handler(req, res) {\n  // I n s t a n t i a t e  T h e  E x c h a n g e  O b j e c t\n  const binance = new Binance().options({\n    APIKEY: '58dpa4DvxQvEdGdsMQON3VueLTTR6qUUBZdTTcCGCNPnQkGH7umVH7vizgdG1vni',\n    APISECRET: 'hsTqehYpdBRd7t6rPjcAljMSpXuFKlPSJmQC18WnZfFynjL5LMgcpG9djDSKSTdg',\n    useServerTime: true,\n    recvWindow: 4000,\n    verbose: true,\n    test: true,\n    //------------------------------------------------------test mode!\n    reconnect: true\n  }); // V a r i a b l e s\n\n  const symbol = 'BTCUSDT';\n  const qtyBtc = 0.05;\n  let result = await binance.futuresMarketBuy(symbol, qtyBtc);\n  await console.log(result);\n  res.statusCode = 200;\n  res.end();\n}","map":{"version":3,"sources":["C:/Users/unmod/AREA51/nextjs-api-cors/pages/api/cors.js"],"names":["Binance","require","config","handler","req","res","binance","options","APIKEY","APISECRET","useServerTime","recvWindow","verbose","test","reconnect","symbol","qtyBtc","result","futuresMarketBuy","console","log","statusCode","end"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAE,kBAAF,CAAvB;;AACAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,eAAe,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAE9C;AACA,QAAMC,OAAO,GAAG,IAAIN,OAAJ,GAAcO,OAAd,CAAsB;AACpCC,IAAAA,MAAM,EAAE,kEAD4B;AAEpCC,IAAAA,SAAS,EAAE,kEAFyB;AAGpCC,IAAAA,aAAa,EAAE,IAHqB;AAIpCC,IAAAA,UAAU,EAAE,IAJwB;AAKpCC,IAAAA,OAAO,EAAE,IAL2B;AAMpCC,IAAAA,IAAI,EAAE,IAN8B;AAMxB;AACZC,IAAAA,SAAS,EAAE;AAPyB,GAAtB,CAAhB,CAH8C,CAa9C;;AACA,QAAMC,MAAM,GAAG,SAAf;AACA,QAAMC,MAAM,GAAG,IAAf;AAEA,MAAIC,MAAM,GAAG,MAAMX,OAAO,CAACY,gBAAR,CAA0BH,MAA1B,EAAkCC,MAAlC,CAAnB;AACA,QAAMG,OAAO,CAACC,GAAR,CAAYH,MAAZ,CAAN;AAEAZ,EAAAA,GAAG,CAACgB,UAAJ,GAAiB,GAAjB;AACAhB,EAAAA,GAAG,CAACiB,GAAJ;AACD","sourcesContent":["const Binance = require ('node-binance-api')\r\nrequire('dotenv').config();\r\n\r\nexport default async function handler(req, res) {\r\n    \r\n  // I n s t a n t i a t e  T h e  E x c h a n g e  O b j e c t\r\n  const binance = new Binance().options({\r\n    APIKEY: '58dpa4DvxQvEdGdsMQON3VueLTTR6qUUBZdTTcCGCNPnQkGH7umVH7vizgdG1vni',\r\n    APISECRET: 'hsTqehYpdBRd7t6rPjcAljMSpXuFKlPSJmQC18WnZfFynjL5LMgcpG9djDSKSTdg',\r\n    useServerTime: true,\r\n    recvWindow: 4000,\r\n    verbose: true,\r\n    test: true, //------------------------------------------------------test mode!\r\n    reconnect: true\r\n  });\r\n\r\n  // V a r i a b l e s\r\n  const symbol = 'BTCUSDT'\r\n  const qtyBtc = 0.05\r\n\r\n  let result = await binance.futuresMarketBuy( symbol, qtyBtc )\r\n  await console.log(result)\r\n  \r\n  res.statusCode = 200\r\n  res.end()\r\n}\r\n"]},"metadata":{},"sourceType":"module"}